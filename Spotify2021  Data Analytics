#For this project I downloaded Spotify 2021 data containing information on highest ranked music. 
#Then I created a table using SQLiteStudio to insert the Spotify data into. Then I perfomed analytics on the
#data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 

#Then I insterted the Spotify data .csv into the table


#Analytics problem 1: Which song in the Spotify table has the highest energy level, and who is the artist for that song? 

SELECT MAX(energy), artist_name, track_name FROM BIT_DB.Spotifydata;

#Analytics problem 2: What is the average danceability score?

SELECT AVG(danceability) AS average_danceability FROM BIT_DB.Spotifydata;

#Analytics problem 3: Which song has the highest loudness and highest popularity and who is the artist for that song?

SELECT artist_name, track_name, loudness, popularity;
FROM BIT_DB.Spotifydata
WHERE loudness = (SELECT MAX(loudness) FROM BIT_DB.Spotifydata 
AND WHERE popularity = (SELECT MAX(popularity) FROM BIT_DB.Spotifydata;

#Analytics problem 4: Find all the songs in the dataset with a tempo between 
100 BPM and 120 BPM, and provide a list of the top 5 artists who have the most 
songs within this tempo range. Include the count of songs for each artist."

SELECT artist_name, COUNT(*) AS song_count
FROM BIT_DB.Spotifydata
WHERE tempo >= 100 AND tempo <= 120
GROUP BY artist_name
ORDER BY song_count DESC
LIMIT 5;

